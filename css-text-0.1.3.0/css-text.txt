-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | CSS parser and renderer.
--   
--   Please see the README and generated docs at
--   <a>https://www.stackage.org/package/css-text</a>
@package css-text
@version 0.1.3.0


-- | Parse CSS with parseNestedBlocks and render it with renderNestedBlock
module Text.CSS.Parse
data NestedBlock

-- | for example a media query
NestedBlock :: Text -> [NestedBlock] -> NestedBlock
LeafBlock :: CssBlock -> NestedBlock

-- | The preferred parser, will capture media queries
parseNestedBlocks :: Text -> Either String [NestedBlock]

-- | The original parser of basic CSS, but throws out media queries
parseBlocks :: Text -> Either String [CssBlock]
parseBlock :: Text -> Either String CssBlock
attrParser :: Parser (Text, Text)
attrsParser :: Parser [(Text, Text)]
blockParser :: Parser (Text, [(Text, Text)])
blocksParser :: Parser [(Text, [(Text, Text)])]
parseAttr :: Text -> Either String (Text, Text)
parseAttrs :: Text -> Either String [(Text, Text)]
instance GHC.Show.Show Text.CSS.Parse.NestedBlock
instance GHC.Classes.Eq Text.CSS.Parse.NestedBlock


-- | Prender CSS with renderNestedBlocks
module Text.CSS.Render
renderNestedBlocks :: [NestedBlock] -> Builder
renderBlocks :: [(Text, [(Text, Text)])] -> Builder
renderBlock :: (Text, [(Text, Text)]) -> Builder
renderAttrs :: [(Text, Text)] -> Builder
renderAttr :: (Text, Text) -> Builder
